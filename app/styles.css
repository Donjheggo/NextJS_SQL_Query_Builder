/* Margin for the outermost div */
.queryBuilder {
  margin-bottom: 1rem;
}

/* Override ruleGroup layout */
.ruleGroup {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

/* arrange rule group gap */
.ruleGroup .ruleGroup-body {
  gap: 0.3rem;
}

/* arrange group, header and rules gaps */
.ruleGroup .ruleGroup-header,
.ruleGroup .rule {
  display: flex;
  gap: 0.3rem;
}

/* Add border to each groups */
.ruleGroup .ruleGroup[data-level="1"] {
  border-width: 1px;
  padding: 0.5rem;
}

/* Move add group button to the bottom */
.ruleGroup-header {
  order: 2;
}

/* Align center rules between groups */
.betweenRules {
  display: flex;
  justify-content: center;
}

/* Align rules and input fields inside eachs rules groups */
.ruleGroup:not([data-level="0"]):not(
    [data-level="1"]:where(:not(:has(> .ruleGroup-body > .rule)))
  )
  .ruleGroup-body {
  grid-template-columns: min-content auto;
  display: grid;
  align-items: flex-start;
}

.ruleGroup-body:only-child + .ruleGroup-addGroup {
  display: none;
}

/* Hide "add rule" button from root group */
.queryBuilder > .ruleGroup > .ruleGroup-header > .ruleGroup-addRule {
  display: none;
}
/* Hide "add group" button from "and" groups */
.queryBuilder > .ruleGroup > .ruleGroup-body .ruleGroup-addGroup {
  display: none;
}

/* Hide "remove group" button from "and" groups */
/* .queryBuilder > .ruleGroup > .ruleGroup-body .ruleGroup-remove {
  display: none;
} */

/* Add "Where" at the first child of rules */
.ruleGroup:not([data-level="0"]):not(
    [data-level="1"]:where(:not(:has(> .ruleGroup-body > .rule)))
  )
  .ruleGroup-body:has(:first-child):before {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  padding: 8px;
  --content: "Where";
  content: var(--content);
}
